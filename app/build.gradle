apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion App.compileSdkVersion

    defaultConfig {
        applicationId App.appId
        minSdkVersion App.minSdkVersion
        targetSdkVersion App.targetSdkVersion
        versionCode App.versionCode
        versionName App.versionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        buildConfigField "boolean", "IS_SHOW_LOG", "false"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
        ndk {
            abiFilters "armeabi-v7a"
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/aidl','src/main/kotlin']
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    // For Kotlin projects
    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        release {
            minifyEnabled false
            buildConfigField "boolean", "IS_SHOW_LOG", NOT_SHOW_LOG
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
//        debug {
//            minifyEnabled false
//            buildConfigField "boolean", "IS_SHOW_LOG", SHOW_LOG
//        }
//        preview {
//            minifyEnabled false
//            buildConfigField "boolean", "IS_SHOW_LOG", SHOW_LOG
//        }
    }

    flavorDimensions "api"
    productFlavors {
        market_meizu {
            dimension "api"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "meizu"]
        }
        market_xiaomi {
            dimension "api"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        market_huawei {
            dimension "api"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "huawei"]
        }
        market_wandoujia {
            dimension "api"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }
        market_yingyongbao {
            dimension "api"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "yingyongbao"]
        }
        market_360 {
            dimension "api"
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "360"]
        }
    }

    //修改APK生成名字  通过android.applicationVariants索引来遍历所有的 build variant
//    applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//
//            def timeNow = getDate()
//            def newName
//            if (variant.buildType.name.equals('debug')) {
//                newName = "android-" + timeNow + "_v${variant.versionName}-debug.apk"
//            } else {
//                newName = "android_${variant.flavorName}_" + timeNow + "_v${variant.versionName}_${variant.buildType.name}.apk"
//            }
//            output.outputFile = new File(output.outputFile.parent, newName)
//        }
//    }
//    externalNativeBuild {
//        cmake {
//            path 'CMakeLists.txt'
//        }
//    }
}

dependencies {
    //AndroidX相关
    implementation Deps.kotlinStdlib
    implementation Deps.androidx_material
    implementation Deps.androidx_appcompat
    implementation Deps.androidx_recyclerView
    implementation Deps.androidx_constraintLayout
    implementation Deps.androidx_legacy
    implementation Deps.androidx_multidex
    //协程
    implementation Deps.coroutines_core
    implementation Deps.coroutines_android
    //Jetpack相关
    implementation Deps.jetpack_lifecycle_process //lifecycle_process
    implementation Deps.jetpack_lifecycle_service //lifecycle_service
    implementation Deps.jetpack_livedata //livedata
    implementation Deps.jetpack_activity_ktx //activity_ktx
    implementation Deps.jetpack_fragment_ktx //fragment_ktx
    implementation Deps.jetpack_viewmodel //viewmodel
    implementation Deps.jetpack_lifecycle_runtime //lifecycleScope
    implementation Deps.jetpack_datastore //datastore
    implementation Deps.jetpack_datastore_pf //datastore_preferences
    //okhttp
    implementation Deps.okhttp
    implementation Deps.okhttp_log_interceptor
    //retrofit
    implementation Deps.retrofit
    implementation Deps.retrofit_converter_gson

    //汉字转拼音，通讯录 https://github.com/promeG/TinyPinyin
    // TinyPinyin核心包，约80KB
    // 可选，适用于Android的中国地区词典
    implementation 'com.github.promeg:tinypinyin:2.0.3'
    implementation 'com.github.promeg:tinypinyin-lexicons-android-cncity:2.0.3'
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    if (compileDialogWithSource == "true") {
        //源码方式集成
        api project(':lib_dialog')
    } else {
        //aar方式集成
        api 'io.github.mqcodedev:lib_dialog:1.3.0' //maven仓库
        //api 'com.ninetripods:lib-dialog:1.1.0' //Jcenter仓库 后续不再更新 建议使用maven方式引入
    }
    api project(':lib_protobuf')
}
