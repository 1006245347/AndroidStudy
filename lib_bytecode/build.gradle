apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'maven'


gradle.projectsEvaluated{
    println("----------------------${toString()}---------------------")
    println("----------------------${gradle.getParent().toString()}---------------------")
}

//gradle.projectsEvaluated {
//    println("----------------------project属性 start----------------------")
//    def projectInfo = "---rootProject-> name:${rootProject.name}\n" +
//            "---getRootDir()-> name:${getRootDir().name}, path:${getRootDir().path}\n" +
//            "---getBuildDir()-> name:${getBuildDir().name}, path:${getBuildDir().path}\n" +
//            "---getParent()-> name:${getParent().name}\n"+
//            "---getDisplayName()-> ${getDisplayName()}\n"+
//            "---getGroup()-> ${getGroup()}\n"+
//            "---getVersion()-> ${getVersion()}\n"+
//            "---getState()-> ${getState()}\n"+
//            "---getPath()-> ${getPath()}\n"+
//            "---project.hasProperty(name)/findProperty(name)-> hasProperty:${project.hasProperty("byte")}, findProperty(name):${findProperty("byte")}\n" +
//            "---getExtensions()-> ${getExtensions().findByName("")}\n"
//    println(projectInfo)
//    println("----------------------project属性 end----------------------")
//}

gradle.taskGraph.whenReady{
//    println("----------------------task名称 start----------------------")
//    tasks.forEach{ task ->
//        println("${task.name}")
//    }
//    println("----------------------task名称 end----------------------")
    /**
     执行结果：
     assemble
     build
     buildDependents
     buildEnvironment
     buildNeeded
     check
     classes
     clean
     compileGroovy
     compileJava
     compileKotlin
     compileTestGroovy
     compileTestJava
     compileTestKotlin
     components
     dependencies
     dependencyInsight
     dependentComponents
     generateMetadataFileForMavenPublication
     generatePomFileForMavenPublication
     groovydoc
     help
     inspectClassesForKotlinIC
     install
     jar
     javadoc
     kaptGenerateStubsKotlin
     kaptGenerateStubsTestKotlin
     kaptKotlin
     kaptTestKotlin
     kotlinSourcesJar
     mainClasses
     model
     outgoingVariants
     processResources
     processTestResources
     projects
     properties
     publish
     publishAllPublicationsToMavenRepository
     publishMavenPublicationToMavenLocal
     publishMavenPublicationToMavenRepository
     publishToMavenLocal
     tasks
     test
     testClasses
     */
}

/**
 * kotlin & groovy混编时，强制编译顺序为 kotlin -> groovy -> classes
 */
compileGroovy.dependsOn compileKotlin
compileGroovy.classpath += files(compileKotlin.destinationDir)
classes.dependsOn compileGroovy

compileGroovy {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}
compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.android.tools.build:gradle:$agp_version"
    //javassist
    implementation 'org.javassist:javassist:3.28.0-GA'
    //ASM wiki：https://asm.ow2.io
    implementation 'org.ow2.asm:asm:9.2' //核心库 基于事件使用时可以只使用这个
    implementation 'org.ow2.asm:asm-commons:9.2' //Tree API使用
    implementation Deps.kotlinStdlib
    implementation gradleApi()
    implementation localGroovy()
    //implementation project(':lib_bytecode_common')
}

group = 'com.performance.optimize'
version = '1.0.0'
publishing {
    repositories {
        maven {
            url = uri("$rootDir/repo")
        }
    }
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

sourceSets {
    main {
        groovy {
            srcDirs += ['src/main/groovy', 'src/main/java']
        }
        java {
            srcDirs += ['src/main/java']
        }
        kotlin {
            srcDirs += ['src/main/java']
        }
    }
}